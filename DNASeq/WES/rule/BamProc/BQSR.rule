rule markdups:
    input:
        bai = output_dir + 'BWA/{sample}.bam.bai',
        bam = output_dir + 'BWA/{sample}.bam'
    output:
        bam = output_dir + 'BQSR/{sample}.markdups.bam'
    params:
        sambamba = config['soft']['sambamba']
    log:
        err = output_dir + 'log/markDup/{sample}.err.log',
        out = output_dir + 'log/markDup/{sample}.stdout.log'
    shell:
        """
        {params.sambamba} markdup -t 2 -p --tmpdir ./tmp {input.bam} {output.bam} 2> {log.err} 1> {log.out} 
        """

rule baserecall:
    input:
        bam = output_dir + 'BQSR/{sample}.markdups.bam'
    output:
        table = output_dir + 'BQSR/{sample}.table'
    params:
        genome = config['fa'],
        site1 = config['1000G_phase1'],
        site2 = config['mills'],
        site3 = config['dbsnp146'],
        gatk = config['soft']['gatk']
    shell:
        """
        {params.gatk} BaseRecalibrator -R {params.genome} \
        -I {input.bam} \
        --known-sites {params.site1} \
        --known-sites {params.site2} \
        --known-sites {params.site3} \
        -O {output.table}\
        """

rule applyBQSR:
    input:
        table = output_dir + 'BQSR/{sample}.table',
        bam = output_dir + 'BQSR/{sample}.markdups.bam'
    output:
        bam = output_dir + 'BQSR/{sample}.markdups.BQSR.bam'
    params:
        gatk = config['soft']['gatk']
    shell:
        """
        {params.gatk} ApplyBQSR \
        --bqsr-recal-file {input.table} \
        -I {input.bam} \
        -O {output.bam}
        """
